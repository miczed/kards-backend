{"version":3,"sources":["../../js/index.js"],"names":["toolbarOptions","front","Quill","modules","formula","toolbar","theme","back","cardsStore","categoriesStore","cardRef","cardsRef","firebase","database","ref","categoryRef","categoriesRef","on","snapshot","data","val","dataWithKeys","Object","keys","map","key","obj","_key","updateCardsList","children","tree","buildTree","deleteChildren","document","getElementById","buildUlTree","dummy","title","unshift","updateCategoriesSelect","elem","hasChildNodes","removeChild","firstChild","dataMap","forEach","node","parent","push","ul","createElement","i","length","createTextNode","button","button_icon","setAttribute","appendChild","addEventListener","loadCategory","getAttribute","loadCardsByCategory","cardsList","cardsListElem","edit_button","edit_button_icon","loadCard","updateCategoriesList","categoriesList","categoryKey","orderByChild","equalTo","once","then","showCardContainer","card","value","category","setContents","front_delta","back_delta","showCategoryContainer","cardContainer","categoryContainer","saveCard","cat","set","getContents","front_html","querySelector","innerHTML","back_html","cardKey","catRef","updatedObj","update","window","alert","initCard","setText","initCategory","deleteCard","answer","confirm","remove","deleteCategory","cardCount","cards","console","log","deletedObjs","hasOwnProperty","cardsRoot","saveCategory","saveCardButton","deleteCardButton","saveCategoryButton","deleteCategoryButton"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Created by michaelziorjen on 21.11.16.\n */\n\nconst toolbarOptions = [\n    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n    [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n\n    [{ 'header': [1, 2, false] }],\n\n    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n    [{ 'align': [] }],\n\n    ['formula','image','video'],\n    ['clean'] // clean styling button\n\n];\n\nconst front = new Quill('#front-editor', {\n    modules: { formula: true, toolbar: toolbarOptions },\n    theme: 'snow'\n});\n\nconst back = new Quill('#back-editor', {\n    modules: { formula: true, toolbar: toolbarOptions },\n    theme: 'snow'\n});\n\n\n\n// Global cards store\nlet cardsStore = []; // Stores all cards locally in the browser (later via localstorage)\nlet categoriesStore = []; // Stores all categories locally in the browser (later via localstorage)\nlet cardRef; // The currently selected card\nlet cardsRef = firebase.database().ref('cards'); // The reference to ALL the cards\nlet categoryRef; // The currently selected category\nlet categoriesRef = firebase.database().ref('categories'); // Reference to ALL the categories\n\n/**\n * Called initially and whenever firebase detects a change on a cards object\n */\ncardsRef.on('value', function(snapshot) {\n    let data = snapshot.val();\n    cardsStore = snapshot.val(); // Store returned data in global cards store\n    let dataWithKeys = Object.keys(data).map((key) => {\n        let obj = data[key];\n        obj._key = key;\n        return obj;\n    });\n    updateCardsList(dataWithKeys);\n});\n/**\n * Called initially and whenever firebase detects a change on a category object\n */\ncategoriesRef.on(\"value\", function(snapshot) {\n\n    let data = snapshot.val();\n    categoriesStore = data;\n    let dataWithKeys = [];\n    if(data != null) {\n        dataWithKeys = Object.keys(data).map((key) => {\n            let obj = data[key];\n            obj._key = key;\n            obj.children = [];\n            return obj;\n        });\n    }\n    //updateCategoriesList(dataWithKeys, document.getElementById(\"categories-list\"));\n    let tree = buildTree(dataWithKeys);\n    deleteChildren(document.getElementById(\"categories-list\"));\n    buildUlTree(tree,document.getElementById(\"categories-list\"));\n    const dummy = { _key: \"\", title: \"-- keine Kategorie --\"};\n    dataWithKeys.unshift(dummy);\n    updateCategoriesSelect(dataWithKeys, document.getElementById(\"card-category\"));\n    updateCategoriesSelect(dataWithKeys, document.getElementById(\"category-parent\"));\n\n\n});\n\n/**\n * helper function to remove all children inside a DOM element\n * @param elem : element whose children should be removed\n */\nfunction deleteChildren(elem) {\n    while (elem.hasChildNodes()) {\n        elem.removeChild(elem.firstChild);\n    }\n}\n\n\n/**\n * Builds a tree from a flat array\n * @pre data objects must have empty children property children\n * @pre data objects parent property must point to the key of the parent or be empty\n * @param data {Array} of objects\n * @returns {Array}\n */\nfunction buildTree(data) {\n    var dataMap = {};\n    data.forEach(function(node) {\n        dataMap[node._key] = node;\n    });\n\n    // create the tree array\n    var tree = [];\n    data.forEach(function(node) {\n        // find parent\n        var parent = dataMap[node.parent];\n        if (parent) {\n            // create child array if it doesn't exist\n            (parent.children || (parent.children = []))\n            // add node to parent's child array\n                .push(node);\n        } else {\n            // parent is null or missing\n            tree.push(node);\n        }\n    });\n    return tree;\n}\n\n/**\n * Renders a UL - LI recursively\n * @param obj : object that should be rendered (should be a tree with children attribute)\n * @param elem : element in which the object should be rendered\n */\nfunction buildUlTree(obj, elem) {\n    if(!obj) { return; }\n    let ul = document.createElement(\"UL\");\n\n    for(let i=0; i < obj.length; i++) {\n        let node = document.createElement(\"LI\");\n        let title = document.createTextNode(obj[i].title);\n        let button = document.createElement(\"BUTTON\");\n        let button_icon = document.createElement(\"SPAN\");\n        button_icon.setAttribute(\"class\",\"icon-pencil\");\n        button.appendChild(button_icon);\n\n        button.setAttribute(\"data-key\", obj[i]._key);\n        node.setAttribute(\"data-key\", obj[i]._key);\n        button.setAttribute(\"class\",\"transparent\");\n        node.appendChild(title);\n        node.appendChild(button);\n\n        button.addEventListener(\"click\", function () {\n            loadCategory(this.getAttribute(\"data-key\"));\n            return true;\n        });\n\n        node.addEventListener(\"click\", function () {\n            loadCardsByCategory(this.getAttribute(\"data-key\"));\n            return true;\n        });\n\n        if(obj[i].children) {\n            buildUlTree(obj[i].children, node);\n        }\n\n        ul.appendChild(node);\n    }\n    elem.appendChild(ul);\n}\n\n/**\n * Updates all dom elements which contain a list of cards\n * @param cardsList Array with cards\n */\nfunction updateCardsList(cardsList) {\n    const cardsListElem = document.getElementById(\"cards-list\");\n    while (cardsListElem.hasChildNodes()) {\n        cardsListElem.removeChild(cardsListElem.firstChild);\n    }\n\n    for(let i = 0; i < cardsList.length; i++) {\n        let node = document.createElement(\"LI\");\n        let title = document.createTextNode(cardsList[i].title);\n        let edit_button = document.createElement(\"BUTTON\");\n        let edit_button_icon = document.createElement(\"SPAN\");\n        edit_button_icon.setAttribute(\"class\",\"icon-pencil\");\n        edit_button.appendChild(edit_button_icon);\n\n        edit_button.setAttribute(\"data-key\", cardsList[i]._key);\n        edit_button.setAttribute(\"class\",\"transparent\");\n        node.appendChild(title);\n        node.appendChild(edit_button);\n\n        edit_button.addEventListener(\"click\",function() {\n           loadCard(this.getAttribute(\"data-key\"));\n           return true;\n        });\n        cardsListElem.appendChild(node);\n    }\n}\n\n/**\n * Updates a single UL DOM element with the list of categories\n * @param categoriesList\n * @param elem UL element\n */\nfunction updateCategoriesList(categoriesList, elem) {\n    if(elem) {\n        while (elem.hasChildNodes()) {\n            elem.removeChild(elem.firstChild);\n        }\n        for (let i = 0; i < categoriesList.length; i++) {\n            let node = document.createElement(\"LI\");\n            let title = document.createTextNode(categoriesList[i].title);\n            let button = document.createElement(\"BUTTON\");\n            let button_icon = document.createElement(\"SPAN\");\n            button_icon.setAttribute(\"class\",\"icon-pencil\");\n            button.appendChild(button_icon);\n\n            button.setAttribute(\"data-key\", categoriesList[i]._key);\n            button.setAttribute(\"class\",\"transparent\");\n            node.appendChild(title);\n            node.appendChild(button);\n\n            button.addEventListener(\"click\", function () {\n                loadCategory(this.getAttribute(\"data-key\"));\n                return true;\n            });\n            elem.appendChild(node);\n        }\n    }\n}\n/**\n * Updates a single SELECT DOM element with the list of categories\n * @param categoriesList\n * @param elem SELECT DOM element\n */\nfunction updateCategoriesSelect(categoriesList, elem) {\n    if(elem) {\n        while (elem.hasChildNodes()) {\n            elem.removeChild(elem.firstChild);\n        }\n        for(let i = 0; i < categoriesList.length; i++) {\n            let node = document.createElement(\"OPTION\");\n            let title = document.createTextNode(categoriesList[i].title);\n            node.setAttribute(\"value\",categoriesList[i]._key);\n            node.appendChild(title);\n            elem.appendChild(node);\n        }\n    }\n}\n\nfunction loadCardsByCategory(categoryKey) {\n    firebase.database().ref('cards').orderByChild('category').equalTo(categoryKey).once('value').then(function(snapshot) {\n        if(snapshot.val()) {\n            let data = snapshot.val();\n            cardsStore = snapshot.val(); // Store returned data in global cards store\n            let dataWithKeys = Object.keys(data).map((key) => {\n                let obj = data[key];\n                obj._key = key;\n                return obj;\n            });\n            updateCardsList(dataWithKeys);\n        }\n    });\n}\n\n/**\n * Loads the card into the corresponding DOM fields and prepares it for editing\n * @param key: String the firebase key of the card\n */\nfunction loadCard(key) {\n    showCardContainer();\n    let card = cardsStore[key];\n    cardRef = firebase.database().ref('cards/' + key);\n    document.getElementById(\"card-title\").value = card.title;\n    document.getElementById(\"card-category\").value = card.category;\n    front.setContents(card.front_delta);\n    back.setContents(card.back_delta);\n}\n\n/**\n * Loads the category into the corresponding DOM fields and prepares it for editing\n * @param key: String the firebase key of the category\n */\nfunction loadCategory(key) {\n    showCategoryContainer()\n    let category = categoriesStore[key];\n    categoryRef = firebase.database().ref('categories/' + key);\n    document.getElementById(\"category-title\").value = category.title;\n    document.getElementById(\"category-parent\").value = category.parent;\n}\n/**\n * Shows the card container and hides the categories container\n */\nfunction showCardContainer() {\n    const cardContainer = document.getElementById(\"card\");\n    const categoryContainer = document.getElementById(\"category\");\n    if(cardContainer.getAttribute(\"class\") == \"hide\") {\n        cardContainer.setAttribute(\"class\",\"show\");\n    }\n    if(categoryContainer.getAttribute(\"class\") == \"show\") {\n        categoryContainer.setAttribute(\"class\",\"hide\");\n    }\n}\n\n/**\n * Shows the category container and hides the card container\n */\nfunction showCategoryContainer() {\n    const cardContainer = document.getElementById(\"card\");\n    const categoryContainer = document.getElementById(\"category\");\n    if(cardContainer.getAttribute(\"class\") == \"show\") {\n        cardContainer.setAttribute(\"class\",\"hide\");\n    }\n    if(categoryContainer.getAttribute(\"class\") == \"hide\") {\n        categoryContainer.setAttribute(\"class\",\"show\");\n    }\n}\n\n/**\n * Saves the currently loaded card to firebase. Works both with update and create\n * @pre: cardRef has to be set if card should be updated, otherwise a new card is created\n * @post: cardRef is set to the updated / created card\n */\nfunction saveCard() {\n    const title = document.getElementById(\"card-title\").value;\n    const cat = document.getElementById(\"card-category\").value;\n    if(title && cat) {\n        if(cardRef == null) { // Neue Karte wird erstellt\n            cardRef = firebase.database().ref('cards').push()\n        }\n        cardRef.set({\n            front_delta: front.getContents(),\n            front_html: document.querySelector(\"#front-editor .ql-editor\").innerHTML,\n            back_delta: back.getContents(),\n            back_html: document.querySelector(\"#back-editor .ql-editor\").innerHTML,\n            title: title,\n            category: cat\n        });\n\n        // Set cards obj in categories\n        const cardKey = cardRef.key;\n        const catRef = firebase.database().ref(\"categories/\" + cat + \"/cards/\" + cardKey);\n        let updatedObj = {};\n        updatedObj[cardKey] = true;\n        catRef.update(updatedObj);\n\n        cardRef = firebase.database().ref('cards/' + cardRef.key);\n    } else {\n        window.alert(\"Bitte gib einen Titel und eine Kategorie für die Karte an.\");\n    }\n}\n/**\n * Resets the DOM fields and the cardRef so a new blank card can be created\n * @post: cardRef points to null\n */\nfunction initCard() {\n    showCardContainer();\n    cardRef = null;\n    document.getElementById(\"card-title\").value = \"\";\n    document.getElementById(\"card-category\").value = \"\";\n    front.setText(\"\");\n    back.setText(\"\");\n}\n/**\n * Resets the DOM fields and the categoryRef so a new blank category can be created\n * @post: categoryRef points to null\n */\nfunction initCategory() {\n    showCategoryContainer();\n    categoryRef = null;\n    document.getElementById(\"category-title\").value = \"\";\n    document.getElementById(\"category-parent\").value = \"\";\n}\n\n/**\n * The currently loaded card is deleted\n * @pre: cardRef should point to the card that should be deleted\n * @post: cardRef is set to null\n */\nfunction deleteCard() {\n    if(cardRef != null) {\n        const cardKey = cardRef.key;\n        const cat = cardsStore[cardKey].category;\n        const card = cardsStore[cardKey];\n        let answer = window.confirm(\"Möchtest du die Karte \" + card.title + \" wirklich löschen?\");\n        if(answer == true ) {\n            let catRef = firebase.database().ref(\"categories/\" + cat + \"/cards/\" + cardKey);\n            let updatedObj = {};\n            updatedObj[cardKey] = null;\n            catRef.update(updatedObj);\n            cardRef.remove();\n            initCard();\n        }\n    } else {\n        window.alert(\"Bitte wähle eine Karte aus, welche du löschen willst.\");\n    }\n}\n/**\n * The currently loaded category and ALL it's cards are deleted\n * @pre: categoryRef should point to the card that should be deleted\n * @post: categoryRef is set to null\n */\nfunction deleteCategory() {\n    if(categoryRef != null) {\n\n        const cat = categoriesStore[categoryRef.key];\n        let cardCount;\n        if(cat.cards) {\n            console.log(cat.cards);\n            cardCount = Object.keys(cat.cards).length;\n        } else {\n            cardCount = 0;\n        }\n        let answer = window.confirm(\"Möchtest du die Kategorie \" + cat.title + \" und ALLE ihre \" + cardCount +\" zugeordneten Karten wirklich löschen?\");\n        if(answer == true) {\n            let deletedObjs = {}\n            for (let key in cat.cards) {\n                if (cat.cards.hasOwnProperty(key)) {\n                    deletedObjs[key] = null;\n                }\n            }\n            let cardsRoot = firebase.database().ref(\"cards\");\n            console.log(deletedObjs);\n            cardsRoot.update(deletedObjs);\n            categoryRef.remove();\n            initCategory();\n        }\n    } else {\n        window.alert(\"Bitte wähle eine Kategorie aus, welche du löschen willst.\");\n    }\n}\n\n/**\n * Saves the currently loaded category to firebase. Works both with update and create\n * @pre: categoryRef has to be set if category should be updated, otherwise a new category is created\n * @post: categoryRef is set to the updated / created category\n */\nfunction saveCategory() {\n    const title = document.getElementById(\"category-title\").value;\n    let parent = document.getElementById(\"category-parent\").value;\n    if(parent == '') {\n        parent = null;\n    }\n    if(title) {\n        if(categoryRef && categoryRef.key == parent) {\n            window.alert(\"Die Kategorie kann sich nicht selbst als Oberkategorie haben.\");\n            return;\n        }\n        if(categoryRef == null) {\n            categoryRef = firebase.database().ref('categories').push();\n        }\n\n        let updatedObj = {};\n        updatedObj[\"title\"] = title;\n        updatedObj[\"parent\"] = parent;\n        categoryRef.update(updatedObj);\n        categoryRef = firebase.database().ref('categories/' + categoryRef.key);\n\n    } else {\n        window.alert(\"Bitte gib einen Titel für die Kategorie an.\");\n    }\n\n\n}\n\n/* Listener attachments */\nconst saveCardButton = document.getElementById(\"card-controls-save\");\nsaveCardButton.addEventListener(\"click\", saveCard);\n\ndocument.getElementById(\"card-controls-new\").addEventListener(\"click\", initCard);\ndocument.getElementById(\"cards-new\").addEventListener(\"click\", initCard);\n\ndocument.getElementById(\"category-controls-new\").addEventListener(\"click\", initCategory);\ndocument.getElementById(\"categories-new\").addEventListener(\"click\", initCategory);\n\nconst deleteCardButton = document.getElementById(\"card-controls-delete\");\ndeleteCardButton.addEventListener(\"click\", deleteCard);\n\nconst saveCategoryButton = document.getElementById(\"category-controls-save\");\nsaveCategoryButton.addEventListener(\"click\", saveCategory);\n\nconst deleteCategoryButton = document.getElementById(\"category-controls-delete\");\ndeleteCategoryButton.addEventListener(\"click\", deleteCategory);\n"]}