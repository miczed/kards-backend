{"version":3,"sources":["../../js/index.js"],"names":["toolbarOptions","front","Quill","modules","formula","toolbar","theme","back","on","delta","getText","ops","retain","insertText","deleteText","cardsStore","categoriesStore","cardRef","cardsRef","firebase","database","ref","categoryRef","categoriesRef","snapshot","data","val","dataWithKeys","Object","keys","map","key","obj","_key","children","tree","buildTree","deleteChildren","document","getElementById","buildUlTree","updateCategoriesSelect","elem","hasChildNodes","removeChild","firstChild","dataMap","forEach","node","parent","push","buildSelectTree","indent","i","length","createElement","title","createTextNode","setAttribute","appendChild","category","ul","wrapper","cardCount","cards","button","button_icon","div","$","text","addClass","append","pill","pill_text","addEventListener","toggleClass","find","getAttribute","loadCardsList","siblings","slideToggle","loadCategory","toggle","cardsListElem","fadeIn","loadCardsByCategory","cardsList","fadeOut","loadCard","categoriesList","categoryKey","callback","orderByChild","equalTo","once","then","showCardContainer","card","value","setContents","front_delta","back_delta","showCategoryContainer","saveCard","cat","oldCategory","remove","newCard","getContents","front_html","querySelector","innerHTML","back_html","modifiedAt","ServerValue","TIMESTAMP","set","cardKey","catRef","updatedObj","update","window","alert","initCard","event","console","log","setText","initCategory","deleteCard","answer","confirm","deleteCategory","deletedObjs","hasOwnProperty","cardsRoot","saveCategory","saveCardButton","deleteCardButton","saveCategoryButton","deleteCategoryButton"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Created by michaelziorjen on 21.11.16.\n */\n\nconst toolbarOptions = [\n    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n    [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n\n    /*[{ 'header': [1, 2, false] }],*/\n\n    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n\n    ['formula','image','video'],\n    ['clean'] // clean styling button\n\n];\n\nconst front = new Quill('#front-editor', {\n    modules: { formula: true, toolbar: toolbarOptions },\n    theme: 'snow'\n});\n\nconst back = new Quill('#back-editor', {\n    modules: { formula: true, toolbar: toolbarOptions },\n    theme: 'snow'\n});\n\n// Replace -> with Arrow char [not sure if this is the right way]\nback.on('text-change', function(delta) {\n    if(back.getText(delta.ops[0].retain-1,2) === \"->\") {\n        back.insertText(delta.ops[0].retain-1,\"→\",\"api\");\n        back.deleteText(delta.ops[0].retain, 2,'api');\n    }\n});\nfront.on('text-change', function(delta) {\n    if(front.getText(delta.ops[0].retain-1,2) === \"->\") {\n        front.insertText(delta.ops[0].retain-1,\"→\",\"api\");\n        front.deleteText(delta.ops[0].retain, 2,'api');\n    }\n});\n\n// Global cards store\nlet cardsStore = []; // Stores all cards locally in the browser (later via localstorage)\nlet categoriesStore = []; // Stores all categories locally in the browser (later via localstorage)\nlet cardRef; // The currently selected card\nlet cardsRef = firebase.database().ref('cards'); // The reference to ALL the cards\nlet categoryRef; // The currently selected category\nlet categoriesRef = firebase.database().ref('categories'); // Reference to ALL the categories\n\n/**\n * Called initially and whenever firebase detects a change on a cards object\n */\n/*cardsRef.on('value', function(snapshot) {\n    let data = snapshot.val();\n    cardsStore = snapshot.val(); // Store returned data in global cards store\n    let dataWithKeys = Object.keys(data).map((key) => {\n        let obj = data[key];\n        obj._key = key;\n        return obj;\n    });\n    updateCardsList(dataWithKeys);\n});*/\n\n/**\n * Called initially and whenever firebase detects a change on a category object\n */\ncategoriesRef.on(\"value\", function(snapshot) {\n\n    let data = snapshot.val();\n    categoriesStore = data;\n    let dataWithKeys = [];\n    if(data != null) {\n        dataWithKeys = Object.keys(data).map((key) => {\n            let obj = data[key];\n            obj._key = key;\n            obj.children = [];\n            return obj;\n        });\n    }\n    let tree = buildTree(dataWithKeys);\n    deleteChildren(document.getElementById(\"categories-list\"));\n    buildUlTree(tree,document.getElementById(\"categories-list\"));\n\n    updateCategoriesSelect(tree,document.getElementById(\"card-category\"));\n    updateCategoriesSelect(tree,document.getElementById(\"category-parent\"));\n\n});\n\n/**\n * helper function to remove all children inside a DOM element\n * @param elem : Element whose children should be removed\n */\nfunction deleteChildren(elem) {\n    while (elem.hasChildNodes()) {\n        elem.removeChild(elem.firstChild);\n    }\n}\n\n\n/**\n * Builds a tree from a flat array\n * @pre data objects must have empty children property children\n * @pre data objects parent property must point to the key of the parent or be empty\n * @param data : Array of objects\n * @returns Array\n */\nfunction buildTree(data) {\n    var dataMap = {};\n    data.forEach(function(node) {\n        dataMap[node._key] = node;\n    });\n\n    // create the tree array\n    var tree = [];\n    data.forEach(function(node) {\n        // find parent\n\n        var parent = node.parent ? dataMap[node.parent] : null;\n        if (parent) {\n            // create child array if it doesn't exist\n            (parent.children || (parent.children = []))\n            // add node to parent's child array\n                .push(node);\n        } else {\n            // parent is null or missing\n            tree.push(node);\n        }\n    });\n    return tree;\n}\n/**\n * Renders a SELECT tree recursively\n * @param obj : object that should be rendered (must be a tree with children attribute)\n * @param elem : Element in which the object should be rendered\n * @param indent : string that is in the beginning of the title output\n */\nfunction buildSelectTree(obj,elem,indent) {\n    if(!obj) { return; }\n\n    for(let i = 0; i < obj.length; i++) {\n        let node = document.createElement(\"OPTION\");\n        let title = document.createTextNode(indent + \" \" + obj[i].title);\n        node.setAttribute(\"value\",obj[i]._key);\n        node.appendChild(title);\n        elem.appendChild(node);\n        if( (cardRef && obj[i]._key == cardsStore[cardRef.key].category )) {\n            node.setAttribute(\"selected\",\"selected\");\n        }\n        if(obj[i].children) {\n            buildSelectTree(obj[i].children,elem,indent + \"--\");\n        }\n    }\n}\n\n/**\n * Renders a UL - LI tree recursively\n * @param obj : object that should be rendered (should be a tree with children attribute)\n * @param elem : Element in which the object should be rendered\n */\nfunction buildUlTree(obj, elem) {\n    if(!obj || obj.length == 0) { return; }\n    let ul = document.createElement(\"UL\");\n\n    for(let i=0; i < obj.length; i++) {\n        let node = document.createElement(\"LI\");\n        let wrapper = document.createElement(\"DIV\");\n\n        let cardCount = 0;\n        if(obj[i].cards) {\n            cardCount = Object.keys(obj[i].cards).length;\n        }\n\n        let button = document.createElement(\"BUTTON\");\n        let button_icon = document.createElement(\"SPAN\");\n        button_icon.setAttribute(\"class\",\"icon-pencil\");\n        button.appendChild(button_icon);\n\n        button.setAttribute(\"data-key\", obj[i]._key);\n        wrapper.setAttribute(\"data-key\", obj[i]._key);\n        button.setAttribute(\"class\",\"transparent\");\n\n        let div = document.createElement(\"DIV\");\n        $(div).text(obj[i].title);\n        $(div).addClass('title');\n\n        $(wrapper).append(div);\n\n        wrapper.appendChild(button);\n\n\n        if(obj[i].children && obj[i].children.length == 0) {\n            let pill = document.createElement(\"SPAN\");\n            let pill_text = document.createTextNode(cardCount);\n            pill.appendChild(pill_text);\n            pill.setAttribute(\"class\", \"pill\");\n            wrapper.appendChild(pill);\n\n            wrapper.addEventListener(\"click\", function () {\n                $('#categories-list .active').toggleClass('active');\n                $(this).find('.title').addClass('active');\n                let key = this.getAttribute(\"data-key\");\n                categoryRef = firebase.database().ref('categories/' + key);\n                loadCardsList(key);\n                return true;\n            });\n\n        } else { // is parent object\n            $(div).on('click',function() {\n                $(this).parent().siblings(\"ul\").slideToggle('fast');\n            })\n        }\n\n\n        button.addEventListener(\"click\", function () {\n            loadCategory(this.getAttribute(\"data-key\"));\n            return true;\n        });\n\n\n        node.appendChild(wrapper);\n\n        if(obj[i].children && obj[i].children.length > 0) {\n            buildUlTree(obj[i].children, node);\n            $(node).find('ul').toggle();\n        }\n        $(wrapper).addClass('category-wrapper');\n\n\n        ul.appendChild(node);\n\n        // Category is currently selected and isn't a parent category\n        if(categoryRef && obj[i]._key == categoryRef.key && obj[i].children && obj[i].children.length > 0) {\n            $(div).addClass('active');\n            $(ul).toggle();\n        }\n\n\n    }\n    elem.appendChild(ul);\n}\n\n/**\n * Gets the cards from the specified category and displays them in the DOM\n * @param key : Key of the category\n */\nfunction loadCardsList(key) {\n    // Delete existing list in DOM\n    const cardsListElem = document.getElementById(\"cards-list\");\n    while (cardsListElem.hasChildNodes()) {\n        cardsListElem.removeChild(cardsListElem.firstChild);\n    }\n\n    // Show loader\n    $(\"#cards-loader\").fadeIn('fast');\n\n    //load cards from server\n    loadCardsByCategory(key,(cardsList) => {\n        // hide loader\n        $(\"#cards-loader\").fadeOut('fast');\n\n        // populate DOM with data\n        if(cardsList) {\n            for (let i = 0; i < cardsList.length; i++) {\n                let node = document.createElement(\"LI\");\n                let title = document.createTextNode(cardsList[i].title);\n\n                node.setAttribute(\"data-key\", cardsList[i]._key);\n\n                node.appendChild(title);\n                if (cardRef && cardRef.key == cardsList[i]._key) { // Card is selected\n                    $(node).addClass('active');\n                }\n                node.addEventListener(\"click\", function () {\n                    $('#cards-list .active').toggleClass('active');\n                    $(this).addClass('active');\n                    loadCard(this.getAttribute(\"data-key\"));\n                    return true;\n                });\n\n                cardsListElem.appendChild(node);\n            }\n        } else {\n            $(cardsListElem).append('<li class=\"empty-state\">Keine Karten</li>')\n        }\n\n    });\n\n}\n\n/**\n * Updates a single SELECT DOM element with the list of categories\n * @param categoriesList : Array\n * @param elem : Element SELECT DOM element\n */\nfunction updateCategoriesSelect(categoriesList, elem) {\n    if(elem) {\n        while (elem.hasChildNodes()) {\n            elem.removeChild(elem.firstChild);\n        }\n        // Add empty node on top\n        let node = document.createElement(\"OPTION\");\n        let title = document.createTextNode(\"-- nichts ausgewählt --\");\n        node.appendChild(title);\n        node.setAttribute(\"value\",\"\");\n        elem.appendChild(node);\n\n        buildSelectTree(categoriesList,elem,\"\");\n\n    }\n}\n/**\n * Gets the cards from firebase that belong to the specified category\n * @param categoryKey : String\n * @param callback : Function which gets executed, when the promise is resolved\n * @return Array list of cards\n */\nfunction loadCardsByCategory(categoryKey,callback) {\n    firebase.database().ref('cards').orderByChild('category').equalTo(categoryKey).once('value').then(function(snapshot) {\n        if(snapshot.val()) {\n            let data = snapshot.val();\n            cardsStore = snapshot.val(); // Store returned data in global cards store\n            let dataWithKeys = Object.keys(data).map((key) => {\n                let obj = data[key];\n                obj._key = key;\n                return obj;\n            });\n            callback(dataWithKeys);\n        } else {\n            callback(null);\n        }\n    });\n}\n\n/**\n * Loads the card into the corresponding DOM fields and prepares it for editing\n * @param key: String the firebase key of the card\n */\nfunction loadCard(key) {\n    showCardContainer();\n    let card = cardsStore[key];\n    cardRef = firebase.database().ref('cards/' + key);\n    document.getElementById(\"card-title\").value = card.title;\n    document.getElementById(\"card-category\").value = card.category;\n    front.setContents(card.front_delta);\n    back.setContents(card.back_delta);\n}\n\n/**\n * Loads the category into the corresponding DOM fields and prepares it for editing\n * @param key: String the firebase key of the category\n */\nfunction loadCategory(key) {\n    showCategoryContainer()\n    let category = categoriesStore[key];\n    categoryRef = firebase.database().ref('categories/' + key);\n    document.getElementById(\"category-title\").value = category.title;\n    document.getElementById(\"category-parent\").value = category.parent ? category.parent : \"\";\n}\n/**\n * Shows the card container and hides the categories container\n */\nfunction showCardContainer() {\n    $('#category').fadeOut('fast');\n    $(\"#card\").fadeIn('fast');\n}\n\n/**\n * Shows the category container and hides the card container\n */\nfunction showCategoryContainer() {\n    $('#category').fadeIn('fast');\n    $(\"#card\").fadeOut('fast');\n}\n\n/**\n * Saves the currently loaded card to firebase. Works both with update and create\n * @pre: cardRef has to be set if card should be updated, otherwise a new card is created\n * @post: cardRef is set to the updated / created card\n */\nfunction saveCard() {\n    const title = document.getElementById(\"card-title\").value;\n    const cat = document.getElementById(\"card-category\").value;\n    if(title && cat) {\n        if(cardRef == null) { // Neue Karte wird erstellt\n            cardRef = firebase.database().ref('cards').push()\n        }\n\n        // Delete from old category when category is changed\n        if(cardsStore[cardRef.key]) {\n            const oldCategory = cardsStore[cardRef.key].category;\n            if(oldCategory != cat) {\n                firebase.database().ref('categories/' + oldCategory + \"/cards/\" + cardRef.key).remove();\n            }\n        }\n        let newCard = {\n            front_delta: front.getContents(),\n            front_html: document.querySelector(\"#front-editor .ql-editor\").innerHTML,\n            back_delta: back.getContents(),\n            back_html: document.querySelector(\"#back-editor .ql-editor\").innerHTML,\n            title: title,\n            category: cat,\n            modifiedAt: firebase.database.ServerValue.TIMESTAMP,\n        }\n        cardRef.set(newCard).then(()=> {\n            // TODO: add some sort of notification\n        });\n\n        cardsStore[cardRef.key] = newCard; \n\n        // Set cards obj in categories\n        const cardKey = cardRef.key;\n        const catRef = firebase.database().ref(\"categories/\" + cat + \"/cards/\" + cardKey);\n        let updatedObj = {};\n        updatedObj[cardKey] = true;\n        catRef.update(updatedObj);\n\n        cardRef = firebase.database().ref('cards/' + cardRef.key);\n        loadCardsList(cat); // update dom list\n    } else {\n        window.alert(\"Bitte gib einen Titel und eine Kategorie für die Karte an.\");\n    }\n}\n/**\n * Resets the DOM fields and the cardRef so a new blank card can be created\n * @post: cardRef points to null\n */\nfunction initCard(event) {\n    showCardContainer();\n    cardRef = null;\n\n    if(categoryRef) {\n        document.getElementById(\"card-category\").value = categoryRef.key;\n        console.log(categoryRef.key);\n    } else {\n        document.getElementById(\"card-category\").value = \"\";\n    }\n    document.getElementById(\"card-title\").value = \"\";\n\n    front.setText(\"\");\n    back.setText(\"\");\n}\n/**\n * Resets the DOM fields and the categoryRef so a new blank category can be created\n * @post: categoryRef points to null\n */\nfunction initCategory() {\n    showCategoryContainer();\n    categoryRef = null;\n    document.getElementById(\"category-title\").value = \"\";\n    document.getElementById(\"category-parent\").value = \"\";\n}\n\n/**\n * The currently loaded card is deleted\n * @pre: cardRef should point to the card that should be deleted\n * @post: cardRef is set to null\n */\nfunction deleteCard() {\n    if(cardRef != null) {\n        const cardKey = cardRef.key;\n        const cat = cardsStore[cardKey].category;\n        const card = cardsStore[cardKey];\n        let answer = window.confirm(\"Möchtest du die Karte \" + card.title + \" wirklich löschen?\");\n        if(answer == true ) {\n            let catRef = firebase.database().ref(\"categories/\" + cat + \"/cards/\" + cardKey);\n            let updatedObj = {};\n            updatedObj[cardKey] = null;\n            catRef.update(updatedObj);\n            cardRef.remove();\n            initCard();\n            loadCardsList(categoryRef.key);\n        }\n    } else {\n        window.alert(\"Bitte wähle eine Karte aus, welche du löschen willst.\");\n    }\n}\n/**\n * The currently loaded category and ALL it's cards are deleted\n * @pre: categoryRef should point to the card that should be deleted\n * @post: categoryRef is set to null\n */\nfunction deleteCategory() {\n    if(categoryRef != null) {\n\n        const cat = categoriesStore[categoryRef.key];\n        let cardCount;\n        if(cat.cards) {\n            console.log(cat.cards);\n            cardCount = Object.keys(cat.cards).length;\n        } else {\n            cardCount = 0;\n        }\n        let answer = window.confirm(\"Möchtest du die Kategorie \" + cat.title + \" und ALLE ihre \" + cardCount +\" zugeordneten Karten wirklich löschen?\");\n        if(answer == true) {\n            let deletedObjs = {}\n            for (let key in cat.cards) {\n                if (cat.cards.hasOwnProperty(key)) {\n                    deletedObjs[key] = null;\n                }\n            }\n            let cardsRoot = firebase.database().ref(\"cards\");\n            console.log(deletedObjs);\n            cardsRoot.update(deletedObjs);\n            categoryRef.remove();\n            initCategory();\n        }\n    } else {\n        window.alert(\"Bitte wähle eine Kategorie aus, welche du löschen willst.\");\n    }\n}\n\n/**\n * Saves the currently loaded category to firebase. Works both with update and create\n * @pre: categoryRef has to be set if category should be updated, otherwise a new category is created\n * @post: categoryRef is set to the updated / created category\n */\nfunction saveCategory() {\n    const title = document.getElementById(\"category-title\").value;\n    let parent = document.getElementById(\"category-parent\").value;\n    if(parent == '') {\n        parent = null;\n    }\n    if(title) {\n        if(categoryRef && categoryRef.key == parent) {\n            window.alert(\"Die Kategorie kann sich nicht selbst als Oberkategorie haben.\");\n            return;\n        }\n        if(categoryRef == null) {\n            categoryRef = firebase.database().ref('categories').push();\n        }\n\n        let updatedObj = {};\n        updatedObj[\"title\"] = title;\n        updatedObj[\"parent\"] = parent;\n        categoryRef.update(updatedObj);\n        categoryRef = firebase.database().ref('categories/' + categoryRef.key);\n\n    } else {\n        window.alert(\"Bitte gib einen Titel für die Kategorie an.\");\n    }\n\n\n}\n\n/* Listener attachments */\nconst saveCardButton = document.getElementById(\"card-controls-save\");\nsaveCardButton.addEventListener(\"click\", saveCard);\n\ndocument.getElementById(\"card-controls-new\").addEventListener(\"click\", initCard);\ndocument.getElementById(\"cards-new\").addEventListener(\"click\", initCard);\n$('#cards-new').on('click',() =>{\n    $('#cards-list .active').toggleClass('active');\n    initCard();\n});\n\n$('#menu-toggle').on('click',() => {\n    $('#sidebar').toggleClass('show');\n    $('#secondbar').toggleClass('show');\n    $('#menu-toggle').toggleClass('show');\n});\n\ndocument.getElementById(\"category-controls-new\").addEventListener(\"click\", initCategory);\ndocument.getElementById(\"categories-new\").addEventListener(\"click\", initCategory);\n\nconst deleteCardButton = document.getElementById(\"card-controls-delete\");\ndeleteCardButton.addEventListener(\"click\", deleteCard);\n\nconst saveCategoryButton = document.getElementById(\"category-controls-save\");\nsaveCategoryButton.addEventListener(\"click\", saveCategory);\n\nconst deleteCategoryButton = document.getElementById(\"category-controls-delete\");\ndeleteCategoryButton.addEventListener(\"click\", deleteCategory);\n"]}